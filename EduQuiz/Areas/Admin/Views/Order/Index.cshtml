@{
    Layout = "_LayoutAdmin";
    ViewBag.Title = "Quản lý hóa đơn";
}
@model ICollection<EduQuiz.Models.EF.Order>
<script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
<div class="container-fluid py-2">
    <div class="row">
        <div class="col-12">
            <div class="card my-4">
                <div class="card-header p-0 position-relative mt-n4 mx-3 z-index-2">
                    <div class="bg-gradient-dark shadow-dark border-radius-lg pt-4 pb-3">
                        <h6 class="text-white text-capitalize ps-3">Hóa đơn</h6>
                    </div>
                </div>
                <div class="card-body px-0 pb-2 px-4">
                    <div class="table-responsive p-0">
                        <div class="col-6" style="display:flex;gap:20px;margin-bottom:20px">
                            <input class="input__date" type="text" id="datepickerstart" placeholder="Từ ngày" style="min-height:18px;flex:1"/>
                            <input class="input__date" type="text" id="datepickerend" placeholder="Đến ngày" style="min-height:18px;flex:1" />
                            <button class="btn m-0 px-2 bg-gradient-info" onclick="filterTable()">Lọc</button>
                            <button class="btn m-0 px-2 bg-gradient-success" onclick="printReport()">Xuất hóa đơn</button>
                        </div>
                        <table id="myTable" class="table align-items-center mb-0">
                            <thead>
                                <tr>
                                    <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Tên người dùng</th>
                                    <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7 ps-2">Thông tin đăng ký</th>
                                    <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Email đăng ký</th>
                                    <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Công ty / Tổ chức</th>
                                    <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Số điện thoại</th>
                                    <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Gói đăng ký</th>
                                    <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Phương thức thanh toán</th>
                                    <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Ngày tạo</th>
                                    <th class="text-secondary text-xxs opacity-7">Trạng thái</th>
                                    <th class="text-secondary text-xxs opacity-7"></th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model)
                                {
                                    <tr>
                                        <td>
                                            <div class="d-flex px-2 py-1">
                                                <div>
                                                    <img src="@item.User.ProfilePicture" class="avatar avatar-sm me-3 border-radius-lg" alt="user1">
                                                </div>
                                                <div class="d-flex flex-column justify-content-center">
                                                    <h6 class="mb-0 text-sm">@item.User.Username</h6>
                                                    <p class="text-xs text-secondary mb-0">@item.User.Email</p>
                                                </div>
                                            </div>
                                        </td>
                                        <td>
                                            <p class="text-xs font-weight-bold mb-0">@item.FirstName @item.LastName</p>
                                        </td>
                                        <td class="align-middle text-center text-sm">
                                            <span class="text-secondary text-xs">@item.Email</span>
                                        </td>
                                        <td class="align-middle text-center text-sm">
                                            <span class="text-secondary text-xs">@item.Company</span>
                                        </td>
                                        <td class="align-middle text-center text-sm">
                                            <span class="text-secondary text-xs">@item.PhoneNumber</span>
                                        </td>
                                        <td class="align-middle text-center text-sm">
                                            <span class="text-secondary text-xs">@item.Quantity @(item.Period == "year" ? "năm" : "tháng") @(item.PlanType == "organization" ? "EduQuiz+ dành cho Tổ chức" : "EduQuiz+ Chuyên nghiệp")</span>
                                        </td>
                                        <td class="align-middle text-center text-sm">
                                            <span class="text-secondary text-xs">@item.PaymentMethod</span>
                                        </td>
                                        <td class="align-middle text-center">
                                            <span class="text-secondary text-xs font-weight-bold">@item.CreateAt</span>
                                        </td>
                                        <td class="align-middle text-center text-sm">
                                            <span class="text-secondary text-xs @(item.Status == "Pending" ? "text-danger" : item.Status == "Success" ? "text-success" : "text-warning")">@(item.Status == "Pending" ? "Đang chờ" : item.Status == "Success" ? "Thành công" : "Đã hủy")</span>
                                        </td>
                                        <td class="align-middle text-center">
                                            <button class="btn m-0 p-2 bg-gradient-info" onclick="openModalCheckBill('@(Uri.EscapeDataString(item.OrderId))','@item.PaymentMethod')">Kiểm tra</button>
                                        </td>
                                    </tr>
                                }

                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="modal" id="modalCheckBill" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header" style="border:none">
                <h3 class="modal-title">Kiểm tra hóa đơn</h3>
                <button type="button" class="close btn" style="position: absolute;top: 0; right: 0;font-size: 20px;" data-dismiss="modal" aria-label="Close">
                  <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="d-flex">
                    <span>Kiểm tra hóa đơn</span>
                    <button id="check-bill" class="btn p-2 bg-gradient-success mx-4">Kiểm tra</button>
                </div>
                <textarea id="response-bill" class="input__Input"></textarea>
            </div>
        </div>
    </div>
</div>
<script>
    var tranid ="";
    var paymentmethod ="";
    $(document).ready(function () {
        $('#myTable').DataTable({
            "order": []
        });
    });
    flatpickr("#datepickerstart", {
        enableTime: true,
        dateFormat: "Y-m-d H:i",
        time_24hr: true,
    });

    flatpickr("#datepickerend", {
        enableTime: true,
        dateFormat: "Y-m-d H:i",
        time_24hr: true,
    });
    function openModalCheckBill(value,method){
        $("#response-bill").val("")
        $("#modalCheckBill").modal("show");
        tranid = encodeURIComponent(value);
        paymentmethod = method;
    }
    $("#check-bill").click(function(){
        if(tranid ==""){
            return;
        }
        $.ajax({
            type: "POST",
            url: "@Url.Action("CheckBill", "Order", new { area = "Admin" })",
            data: {
                tranid: tranid,
                paymentmethod:paymentmethod
            },
            success: function (response) {
                if (response.status == true) {
                    $("#response-bill").val(JSON.stringify(response.data, null, 2))
                }
            },
            error: function (err) {

            }
        })
    })
    function filterTable(){
        const startdate = $('#datepickerstart').val();
        const enddate = $('#datepickerend').val();
        if (startdate == "" || enddate == "") {
            Swal.fire({
                icon: 'error',
                title: 'Lỗi!',
                text: "Vui lòng nhập ngày lọc.",
            });
            return;
        }
        $.ajax({
            type: "POST",
            url: "@Url.Action("FilterOrder", "Order", new { area = "Admin" })",
            data: {
                startdate: startdate,
                enddate: enddate
            },
            success: function (response) {
                if (response.status == true) {
                    LoadList(response.data);
                }
            },
            error: function (err) {

            }
        })
    }
    function LoadList(data) {
        data = JSON.parse(data);
        var table = $('#myTable').DataTable();
        table.clear().draw();
        for (let i = 0; i < data.length; i++) {
            const node = table.row.add([
                `<div class="d-flex px-2 py-1">
                    <div>
                        <img src="${data[i].ProfilePicture}" class="avatar avatar-sm me-3 border-radius-lg" alt="user1">
                    </div>
                    <div class="d-flex flex-column justify-content-center">
                        <h6 class="mb-0 text-sm">${data[i].Username}</h6>
                        <p class="text-xs text-secondary mb-0">${data[i].UserEmail}</p>
                    </div>
                </div>`,
                `<p class="text-xs font-weight-bold mb-0">${data[i].FirstName} ${data[i].LastName}</p>`,
                `<span class="text-secondary text-xs">${data[i].OrderEmail}</span>`,
                `<span class="text-secondary text-xs">${data[i].Company}</span>`,
                `<span class="text-secondary text-xs">${data[i].PhoneNumber}</span>`,
                `<span class="text-secondary text-xs">${data[i].PlanType}</span>`,
                `<span class="text-secondary text-xs">${data[i].PaymentMethod}</span>`,
                `<span class="text-secondary text-xs font-weight-bold">${data[i].CreateAt}</span>`,
                `<span class="text-secondary text-xs ${data[i].Status == 'Đang chờ' ? 'text-danger' : data[i].Status == 'Thành công' ? 'text-success' : 'text-warning'}">${data[i].Status}</span>`,
                `<button class="btn m-0 p-2 bg-gradient-info" onclick="openModalCheckBill('${encodeURIComponent(data[i].OrderId)}','${data[i].PaymentMethod}')">Kiểm tra</button>`
            ]).draw().node();
            $(node).find("td").eq(1).addClass("align-middle text-center text-sm");
            $(node).find("td").eq(2).addClass("align-middle text-center text-sm");
            $(node).find("td").eq(3).addClass("align-middle text-center text-sm");
            $(node).find("td").eq(4).addClass("align-middle text-center text-sm");
            $(node).find("td").eq(5).addClass("align-middle text-center text-sm");
            $(node).find("td").eq(6).addClass("align-middle text-center text-sm");
            $(node).find("td").eq(7).addClass("align-middle text-center text-sm");
        }
    }
    function printReport() {
        const startdate = $('#datepickerstart').val();
        const enddate = $('#datepickerend').val();
        if (startdate == "" || enddate == "") {
            Swal.fire({
                icon: 'error',
                title: 'Lỗi!',
                text: "Vui lòng nhập ngày lọc.",
            });
            return;
        }
        $.ajax({
            type: "POST",
            url: "@Url.Action("ExportReportOrder", "Order", new { area = "Admin" })",
            data: {
                startdate: startdate,
                enddate: enddate
            },
            xhrFields: {
                responseType: 'blob'
            },
            success: function (response) {
                // Tạo blob từ response (đã định nghĩa 'blob')
                var blob = new Blob([response], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });
                var link = document.createElement('a');
                var url = window.URL.createObjectURL(blob);
                link.href = url;
                link.download = `Báo cáo chi tiết hóa đơn từ ngày ${formatDate(startdate)} đến ngày ${formatDate(enddate)}.xlsx`;
                document.body.appendChild(link);
                link.click();
                document.body.removeChild(link);
                window.URL.revokeObjectURL(url);
            },
            error: function (err) {

            }
        })
    }
    function formatDate(dateString) {
        const options = { year: 'numeric', month: '2-digit', day: '2-digit' };
        return new Date(dateString).toLocaleDateString('en-GB', options).replace(/\//g, '-');
    }
</script>