@{
    Layout = "_LayoutPlay";
    ViewBag.Title = "Eduquiz! Game";
}
@model ICollection<EduQuiz.Models.ReportPodium>
<div class="end-game-screenstyles__PageWrapper">
    <canvas id="spotlightCanvas"></canvas>
    <div class="end-game-screenstyles__ContentWrapper">
        <main class="podium__PageWrapper">
            <div class="background__Background">
                <div class="podium-styles__PageWrapper">
                    <section class="flex-bar__Bar">
                        <div class="podium-core__TitleWrapper">
                            <img class="podium-core__Logo" src="/src/img/logotext.png" />
                            <h1 class="podium-core__Title">Giới thiệu về khoa học</h1>
                            <h2 class="podium-core__SubTitle"><span>Xếp hạng top 3</span></h2>
                        </div>
                    </section>
                    <section class="podium-core__Center">
                        <div class="podium-charts__Charts">
                            @{
                                int count = 1;
                            }
                            @foreach(var item in Model)
                            {
                                <div class="bar-styles__Bar place-@count">
                                    <div class="player-name__PlayerWrapper">
                                        <div class="player-name__AnimationWrapper ef-av@(count)">
                                            <div class="avatar__Container">
                                                <div class="styles__AvatarWrapper">
                                                    @if (item.Nickname != "")
                                                    {
                                                        <img class="styles__AvatarItem" src="@item.Accessory" />
                                                        <img class="styles__AvatarBase" src="@item.AvatarUrl" />
                                                        <div class="styles__AvatarFace">
                                                            <img src="~/src/img/eyes-blink.gif" />
                                                        </div>
                                                    }  
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="medal__Medal @(count == 1 ? "gold" : count == 2 ?"silver" :"bronze")">
                                    </div>
                                    <div class="bar-styles__UserNameBelow efname-@count">@item.Nickname</div>
                                    <div class="bar-styles__Score">@(item.TotalScore != 0 ? item.TotalScore : "")</div>
                                </div>
                                count++;
                            }
                        </div>
                    </section>
                </div>
            </div>
        </main>
    </div>
</div>
<script>
    var currentUrl = window.location.href;
    function Redirect() {
        location.href = currentUrl.replace("/podium", "");
    }
    const canvas = document.getElementById('spotlightCanvas');
    const ctx = canvas.getContext('2d');

    // Đặt kích thước canvas phù hợp với cửa sổ
    canvas.width = window.innerWidth;
    canvas.height = window.innerHeight;

    const finalX = canvas.width / 2;  // Vị trí x cuối cùng (trung tâm)
    const finalY = (canvas.height / 2) - 100; // Vị trí y cuối cùng (trung tâm, lệch nhẹ)

    let startTime = null;
    const movementDuration = 1000; // Thời gian di chuyển (ms)
    const bounceDuration = 500;    // Thời gian hiệu ứng bounce (ms)

    // Hàm để vẽ spotlight
    function drawSpotlight(x, y, radius) {
        // Xóa canvas
        ctx.clearRect(0, 0, canvas.width, canvas.height);

        // Vẽ nền bán trong suốt
        ctx.fillStyle = 'rgba(0, 0, 0, 0.8)';
        ctx.fillRect(0, 0, canvas.width, canvas.height);

        // Tạo vùng trong suốt hình tròn (spotlight)
        ctx.globalCompositeOperation = 'destination-out';
        ctx.beginPath();
        ctx.arc(x, y, radius, 0, Math.PI * 2);
        ctx.fill();
        ctx.globalCompositeOperation = 'source-over';
    }

    // Hàm di chuyển spotlight
    function moveSpotlight(timestamp) {
        if (!startTime) startTime = timestamp;

        const elapsed = timestamp - startTime;
        const progress = Math.min(elapsed / movementDuration, 1); // Tiến độ từ 0 đến 1

        const currentX = finalX * progress;
        const currentY = finalY * progress;

        drawSpotlight(currentX, currentY, 250);

        if (progress < 1) {
            requestAnimationFrame(moveSpotlight);
        } else {
            // Sau khi di chuyển xong, bắt đầu hiệu ứng bounce
            startTime = null; // Đặt lại thời gian bắt đầu
            requestAnimationFrame(bounceSpotlight);
        }
    }

    // Hàm hiệu ứng bounce
    function bounceSpotlight(timestamp) {
        if (!startTime) startTime = timestamp;

        const elapsed = timestamp - startTime;
        const progress = Math.min(elapsed / bounceDuration, 1); // Tiến độ từ 0 đến 1

        let radius;
        if (progress < 0.5) {
            radius = 250 + (progress * 2) * 50; // Từ 250 đến 280
        } else {
            radius = 280 - ((progress - 0.5) * 2) * 50; // Từ 280 đến 250
        }

        drawSpotlight(finalX, finalY, radius);

        if (progress < 1) {
            requestAnimationFrame(bounceSpotlight);
        }
    }

    // Bắt đầu animation sau 10 giây
    setTimeout(() => {
        requestAnimationFrame(moveSpotlight);
        setTimeout(() => {
            $("#spotlightCanvas").remove();
            confetti({
                particleCount: 180,
                startVelocity: 30,
                spread: 300,
                scalar: 1.2,
            });
            setTimeout(() => {
                $(".end-game-screenstyles__PageWrapper").append(`<div class="styles__SidebarWrapper">
                <div class="styles__ScrollWrapper">
                    <button class="podium-sidebar-button__Button">
                        <span class="icon__Icon">
                            <svg viewBox="0 0 32 32" focusable="false" stroke="none" stroke-width="0" aria-hidden="true"><title>Icon</title><path d="M16.0048 25H6.00479C5.60479 25 5.24479 24.76 5.08479 24.4C4.92479 24.03 4.99479 23.61 5.26479 23.32L7.57479 20.84C6.54479 19.39 6.00479 17.74 6.00479 16C6.00479 11.04 10.4948 7 16.0048 7C21.5148 7 26.0048 11.04 26.0048 16C26.0048 20.96 21.5148 25 16.0048 25Z" style="fill: rgb(255, 255, 255);"></path></svg>
                        </span>
                        <div class="podium-sidebar-button__TextWrapper">Xem đánh giá</div>
                    </button>
                    <button class="podium-sidebar-button__Button">
                        <span class="icon__Icon">
                            <svg viewBox="0 0 32 32" focusable="false" stroke="none" stroke-width="0" aria-hidden="true"><title>Icon</title><path d="M26.25 11.25V23.75C26.25 24.413 25.9866 25.0489 25.5178 25.5178C25.0489 25.9866 24.413 26.25 23.75 26.25H8.75C8.08696 26.25 7.45107 25.9866 6.98223 25.5178C6.51339 25.0489 6.25 24.413 6.25 23.75V17.5H8.75V23.75H23.75V11.25H10V15L5 10L10 5V8.75H23.75C24.413 8.75 25.0489 9.01339 25.5178 9.48223C25.9866 9.95107 26.25 10.587 26.25 11.25ZM14.375 21.25L19.675 17.5L14.375 13.75V21.25Z" style="fill: rgb(255, 255, 255);"></path></svg>
                        </span>
                        <div class="podium-sidebar-button__TextWrapper" onclick="Redirect()">Thoát trò chơi</div>
                    </button>
                </div>
                </div>`).addClass("pdw-2");
            }, 5000)
        }, 3000);
    }, 11700);

</script>
